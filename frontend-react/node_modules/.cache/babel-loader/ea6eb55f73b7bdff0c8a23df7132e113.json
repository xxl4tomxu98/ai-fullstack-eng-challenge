{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/site/src/App.js\",\n    _s = $RefreshSig$();\n\n//import React, { Component } from 'react';\nimport React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  _s();\n\n  const [term, setTerm] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(3);\n\n  const updateTerm = e => {\n    setTerm(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchMovies(term);\n  };\n\n  const searchMovies = async term => {\n    const res = await fetch(`/search/${term}`);\n\n    if (res.ok) {\n      const data = await res.json();\n      return data;\n    }\n\n    throw res;\n  };\n\n  const fetchMovieData = async () => {\n    const res = await fetch('/test');\n\n    if (res.ok) {\n      const data = await res.json();\n      console.log(data);\n      setMovieData((data, null, 2) || 'No Movie');\n      return data;\n    }\n\n    throw res;\n  };\n\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, This Full Stack AI Challenge.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(movieData, undefined, '  ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Kvp2pdCs36rwjNZ+qPh69aZ4aVA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/site/src/App.js"],"names":["React","useState","useEffect","App","term","setTerm","movieData","setMovieData","currentPage","setCurrentPage","perPage","setPerPage","updateTerm","e","target","value","handleSubmit","preventDefault","searchMovies","res","fetch","ok","data","json","fetchMovieData","console","log","JSON","stringify","undefined"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMW,UAAU,GAAIC,CAAD,IAAO;AACxBR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,YAAY,CAACd,IAAD,CAAZ;AACD,GAHD;;AAKA,QAAMc,YAAY,GAAG,MAAOd,IAAP,IAAgB;AACjC,UAAMe,GAAG,GAAG,MAAMC,KAAK,CAAE,WAAUhB,IAAK,EAAjB,CAAvB;;AACA,QAAIe,GAAG,CAACE,EAAR,EAAY;AACR,YAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACA,aAAOD,IAAP;AACH;;AACD,UAAMH,GAAN;AACH,GAPD;;AAUA,QAAMK,cAAc,GAAG,YAAY;AACjC,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;;AACE,QAAID,GAAG,CAACE,EAAR,EAAY;AACR,YAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAf,MAAAA,YAAY,CAAC,CAACe,IAAI,EAAE,IAAF,EAAQ,CAAb,KAAmB,UAApB,CAAZ;AACA,aAAOA,IAAP;AACH;;AACD,UAAMH,GAAN;AACH,GATD;;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAMG,IAAI,CAACC,SAAL,CAAetB,SAAf,EAA0BuB,SAA1B,EAAqC,IAArC;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtDD;;GAAM1B,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["//import React, { Component } from 'react';\nimport React, { useState, useEffect } from 'react';\n\n\nconst App = () => {\n\n    const [term, setTerm] = useState('');\n    const [movieData, setMovieData] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [perPage, setPerPage] = useState(3);\n\n    const updateTerm = (e) => {\n      setTerm(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      searchMovies(term);\n    }\n\n    const searchMovies = async (term) => {\n        const res = await fetch(`/search/${term}`)\n        if (res.ok) {\n            const data = await res.json();\n            return data;\n        }\n        throw res;\n    }\n\n\n    const fetchMovieData = async () => {\n      const res = await fetch('/test')\n        if (res.ok) {\n            const data = await res.json();\n            console.log(data);\n            setMovieData((data, null, 2) || 'No Movie');\n            return data;\n        }\n        throw res;\n    }\n\n\n\n    useEffect(() => {\n        fetchMovieData();\n    }, []);\n\n\n    return (\n        <div>\n          <h1>Hello, This Full Stack AI Challenge.</h1>\n\n          <pre>{JSON.stringify(movieData, undefined, '  ')}</pre>\n\n        </div>\n    );\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}